SUBROUTINE E.CALC.ACCRUAL.CYCLES(ENQ)

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.LD.LOANS.AND.DEPOSITS
    $INSERT I_F.EB.FUTURE.BALANCES
    $INSERT I_F.LMM.ACCOUNT.BALANCES
    $INCLUDE ISB.BP I_F.LD.ACCRUAL.WRKF

    LOCATE "LD.ID" IN ENQ<2,1> SETTING SEL.POS THEN
        Y.LD.ID = ENQ<4,SEL.POS>
    END

    GOSUB OPEN
    GOSUB CALC.ACCRUALS

    RETURN

OPEN:

    WRKF.REC = '' ; Y.TOT.INT = ''

    FN.LD.LOANS.AND.DEPOSITS = 'F.LD.LOANS.AND.DEPOSITS'
    F.LD.LOANS.AND.DEPOSITS = ''
    CALL OPF(FN.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS)

    FN.LD.LOANS.AND.DEPOSITS.NAU = 'F.LD.LOANS.AND.DEPOSITS$NAU'
    F.LD.LOANS.AND.DEPOSITS.NAU = ''
    CALL OPF(FN.LD.LOANS.AND.DEPOSITS.NAU,F.LD.LOANS.AND.DEPOSITS.NAU)

    FN.EB.FUTURE.BALANCES = 'F.EB.FUTURE.BALANCES'
    F.EB.FUTURE.BALANCES = ''
    CALL OPF(FN.EB.FUTURE.BALANCES,F.EB.FUTURE.BALANCES)

    FN.LD.SCHEDULE.DEFINE.WORK = 'F.LD.SCHEDULE.DEFINE.WORK'
    F.LD.SCHEDULE.DEFINE.WORK = ''
    CALL OPF(FN.LD.SCHEDULE.DEFINE.WORK,F.LD.SCHEDULE.DEFINE.WORK)

    FN.LD.ACCRUAL.WRKF = 'F.LD.ACCRUAL.WRKF'
    F.LD.ACCRUAL.WRKF = ''
    CALL OPF(FN.LD.ACCRUAL.WRKF,F.LD.ACCRUAL.WRKF)

    FN.LMM.ACCOUNT.BALANCES = 'F.LMM.ACCOUNT.BALANCES'
    F.LMM.ACCOUNT.BALANCES = ''
    CALL OPF(FN.LMM.ACCOUNT.BALANCES , F.LMM.ACCOUNT.BALANCES)

    RETURN

CALC.ACCRUALS:

    GOSUB GET.DATA

    IF NOT(R.LD.LOANS.AND.DEPOSITS) THEN RETURN

    FOR I = Y.NO.OF.SCHEDS TO 1 STEP - 1
        Y.OS.PRIN = ABS(PRINCIPAL.BAL.LIST<1,I>)
        Y.INT = 0
        Y.NB.DAYS = 0

        NEW.PRIN = Y.OS.PRIN

!! Dates are taken from EB.FUTURE.BALANCES(live) or from LD.SCHEDULE.DEFINE.WORK($nau)

        Y.DATE1 = DATE.LIST<1,I>
        Y.DATE2 = DATE.LIST<1,I-1>

        IF I EQ '1' THEN Y.DATE2 = Y.MAT.DATE

!! When the LD has been rescheduled no need to
!! calculte the Accruals for the previos dates. Just Read it.

        CHG.DATES = R.LMM.ACCOUNT.BALANCES<LD27.EFFECTIVE.DATE>
        LOCATE Y.DATE2 IN CHG.DATES<1,1> SETTING FOUND.DATE ELSE FOUND.DATE = 0
        IF FOUND.DATE THEN
            TEMP.PRIN.AMT = '' ; TEMP.PRIN.AMT = R.LMM.ACCOUNT.BALANCES<LD27.PRINC.INT.BAL>
            TEMP.OS.PRIN = Y.OS.PRIN * -1

            NO.OF.ACCRUAL.CYCLE = DCOUNT(TEMP.PRIN.AMT,VM)
            FOR KK = 1 TO NO.OF.ACCRUAL.CYCLE
                IF R.LMM.ACCOUNT.BALANCES<LD27.PRINC.INT.BAL,KK> EQ TEMP.OS.PRIN THEN
                    Y.INT += ABS(R.LMM.ACCOUNT.BALANCES<LD27.INT.AMT.TODATE,KK>)
                END
            NEXT KK

        END ELSE
            CALL EB.INTEREST.CALC(Y.DATE1,Y.DATE2, Y.RATE,Y.OS.PRIN,Y.INT,Y.NB.DAYS,Y.INT.BAS,'',Y.RD.AMT,Y.RD.T,'')
        END


        WRKF.REC<LD.ACC.SCHED.START.DATE,-1> = Y.DATE1
        WRKF.REC<LD.ACC.SCHED.END.DATE,-1> = Y.DATE2
        WRKF.REC<LD.ACC.SCHED.PRIN,-1> = Y.OS.PRIN

        IF I EQ '1' THEN
            Y.INT = ABS(Y.TOT.INT.AMT - Y.TOT.INT)
            CALL EB.ROUND.AMOUNT(Y.CCY,Y.INT,'','')
        END

        CALL EB.ROUND.AMOUNT(Y.CCY,Y.INT,'','')
        WRKF.REC<LD.ACC.SCHED.ACCR,-1> = Y.INT

        IF I NE Y.NO.OF.SCHEDS THEN
            WRKF.REC<LD.ACC.PAYMENT.AMT,-1> = ABS(NEW.PRIN - OLD.PRIN)
        END
        IF I EQ '1' THEN
            WRKF.REC<LD.ACC.PAYMENT.AMT,-1> = Y.OS.PRIN
        END

        Y.TOT.INT += Y.INT
        OLD.PRIN = Y.OS.PRIN

    NEXT I

    CALL EB.ROUND.AMOUNT(Y.CCY,Y.TOT.INT,'','')
    WRKF.REC<LD.ACC.TOT.INTEREST> = Y.TOT.INT
    WRKF.REC<LD.ACC.CUSTOMER.ID> = Y.CUS.ID
    WRKF.REC<LD.ACC.LD.AMOUNT> = Y.LD.AMOUNT
    WRKF.REC<LD.ACC.CURR.INT.RATE> = Y.CURR.INT

    CALL F.WRITE(FN.LD.ACCRUAL.WRKF,Y.LD.ID,WRKF.REC)
    CALL JOURNAL.UPDATE('')

    RETURN

GET.DATA:

    CALL F.READ(FN.LD.LOANS.AND.DEPOSITS,Y.LD.ID,R.LD.LOANS.AND.DEPOSITS,F.LD.LOANS.AND.DEPOSITS,ERR.LD.LOANS.AND.DEPOSITS)
    LD.AMT = R.LD.LOANS.AND.DEPOSITS<LD.AMOUNT>
    Y.VALUE.DATE = R.LD.LOANS.AND.DEPOSITS<LD.VALUE.DATE>

    CALL F.READ(FN.LMM.ACCOUNT.BALANCES,Y.LD.ID:'00',R.LMM.ACCOUNT.BALANCES,F.LMM.ACCOUNT.BALANCES,ERR.LMM.ACCOUNT.BALANCES)

    CALL F.READ(FN.EB.FUTURE.BALANCES,Y.LD.ID,R.EB.FUTURE.BALANCES,F.EB.FUTURE.BALANCES,ERR.EB.FUTURE.BALANCES)
    PRINCIPAL.BAL.LIST = R.EB.FUTURE.BALANCES<EB.BAL.PRINCIPAL>

    DATE.LIST = '' ; DATE.LIST = R.EB.FUTURE.BALANCES<EB.BAL.PRIN.DATE>

!! When the contract is still in INAU status (prior to first authorization)
!! read from $NAU file and LD.SCHEDULE.DEFINE.WORK
!!
!! the order of Principal balances and dates stored in this File is
!! reverse of the order than that store in EB.FUTURE.BALANCES

    CALL F.READ(FN.LD.LOANS.AND.DEPOSITS.NAU,Y.LD.ID,R.LD.LOANS.AND.DEPOSITS.NAU,F.LD.LOANS.AND.DEPOSITS.NAU,ERR.LD.LOANS.AND.DEPOSITS.NAU)

    IF R.LD.LOANS.AND.DEPOSITS EQ '' THEN
        R.LD.LOANS.AND.DEPOSITS = R.LD.LOANS.AND.DEPOSITS.NAU
        LD.AMT = R.LD.LOANS.AND.DEPOSITS<LD.AMOUNT>
        Y.VALUE.DATE = R.LD.LOANS.AND.DEPOSITS<LD.VALUE.DATE>

        CALL F.READ(FN.LD.SCHEDULE.DEFINE.WORK,Y.LD.ID,R.LD.SCHEDULE.DEFINE.WORK,F.LD.SCHEDULE.DEFINE.WORK,ERR.LD.SCHEDULE.DEFINE.WORK)
        NO.LINES = DCOUNT(R.LD.SCHEDULE.DEFINE.WORK,FM)
        REQ.LINES = FIELD(R.LD.SCHEDULE.DEFINE.WORK,FM,6,NO.LINES)
        PRINCIPAL.BAL.LIST = LD.AMT
        TEMP.PRIN.OS = LD.AMT
        NO.OF.REQ.LINES = DCOUNT(REQ.LINES,FM)
        FOR I = 1 TO NO.OF.REQ.LINES
            SCHED.PRIN = REQ.LINES<I>
            INST.PRIN = FIELD(SCHED.PRIN,VM,3)
            TEMP.PRIN.OS = TEMP.PRIN.OS - INST.PRIN
            IF TEMP.PRIN.OS GT '0' THEN
                PRINCIPAL.BAL.LIST<1,-1> = TEMP.PRIN.OS
            END
        NEXT I
        NO.OF.PRIN = DCOUNT(PRINCIPAL.BAL.LIST,VM)
        FOR J = NO.OF.PRIN TO 1 STEP - 1
            TEMP.PRIN.LIST<1,-1> = PRINCIPAL.BAL.LIST<1,J>
        NEXT J
        PRINCIPAL.BAL.LIST = TEMP.PRIN.LIST

        DATE.LIST = '' ; TEMP.DATE.LIST = Y.VALUE.DATE :VM: R.LD.SCHEDULE.DEFINE.WORK<1>
        NO.OF.DATES = DCOUNT(TEMP.DATE.LIST,VM)
        FOR K = NO.OF.DATES TO 1 STEP - 1
            IF K NE NO.OF.DATES THEN
                DATE.LIST<1,-1> = TEMP.DATE.LIST<1,K>
            END
        NEXT J
    END

    Y.CCY = R.LD.LOANS.AND.DEPOSITS<LD.CURRENCY>

    IF R.LD.LOANS.AND.DEPOSITS.NAU THEN
        Y.MAT.DATE = R.LD.LOANS.AND.DEPOSITS.NAU<LD.FIN.MAT.DATE>
        Y.RATE = R.LD.LOANS.AND.DEPOSITS.NAU<LD.INTEREST.RATE>
    END ELSE
        Y.MAT.DATE = R.LD.LOANS.AND.DEPOSITS<LD.FIN.MAT.DATE>
        Y.RATE = R.LD.LOANS.AND.DEPOSITS<LD.INTEREST.RATE>
    END

    Y.NO.OF.SCHEDS = DCOUNT(PRINCIPAL.BAL.LIST,VM)

    Y.INT.BAS = R.LD.LOANS.AND.DEPOSITS<LD.INTEREST.BASIS>
    Y.CUS.ID = R.LD.LOANS.AND.DEPOSITS<LD.CUSTOMER.ID>
    Y.LD.AMOUNT = R.LD.LOANS.AND.DEPOSITS<LD.AMOUNT>
    Y.CURR.INT = R.LD.LOANS.AND.DEPOSITS<LD.INTEREST.RATE>
    Y.TOT.INT.AMT = R.LD.LOANS.AND.DEPOSITS<LD.TOT.INTEREST.AMT>

    RETURN

END

