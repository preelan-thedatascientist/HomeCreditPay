42.Removal of INPUT.BUFFER 
Keyword/Name: 
   INPUT.BUFFER 
Resolution: 
  EB.SET.NEXT.TASK or EB.SET.NEW.TASK 
Description: 
   INPUT.BUFFER should not be used any local development and it should be replaced with either EB.SET.NEXT.TASK or EB.SET.NEW.TASK. 
Reason: 
   Not browser compatible. 
Example: 
 INPUT.BUFFER = 'CUSTOMER I ' 
 Should be replaced as 
  CALL EB.SET.NEXT.TASK('CUSTOMER I ') 

43.Removal of ENQUIRY.DISPLAY, REPORT.VIEW & V$FUNCTION 
Keyword/Name: 
ENQUIRY.DISPLAY, REPORT.VIEW & V$FUNCTION 
 
Resolution: 
Should be never be used with Browser. 
 
Description: 
These keywords are not compatible with T24 browser. We need to check whether these keywords are still not compatible with browser. 
For the key word V$FUNCTION we must make sure that this common variable is having proper operation or function while used in a browser routine. 

44. Removal of Concat file CATEG.MONTH 
  
Keyword/Name: 
 CATEG.MONTH 
Resolution: 
 GET.CATEG.MONTH.ENTRIES 
Description: 
  Any local development referring concat file CATEG.MONTH should replace with API GET.CATEG.MONTH.ENTRIES. 


Reason: 
  The Concat file CATEG.MOTH has been made obsolete instead CATEG.ENT.MONTH & CATEG.ENT.ACTIVITY are two replacement tables having categ entries montly wise for all the categories. 
Example: 
CALL F.READ (FN.CATEG.MONTH,” 53012.200303”, R.CATEG.MONTH, 
F.CATEG.MONTH, CE.ERR) 
Should be replaced as 
START.DATE = 20030301 
END.DATE = 20070330 
CATEGORY = 53012 
R.CATEG.MONTH = '' 
CALL GET.CATEG.MONTH.ENTRIES (START.DATE, END.DATE, CATEGORY, 
R.CATEG.MONTH) 

45.Removal of Enquiry 

Keyword/Name: 
a.	POS.TABLE.CCY 
b.	POS.TABLE.CCY.DDE 
c.	POS.TABLE.OPEN 
d.	POS.TABLE.OPEN.SUM 
e.	POS.TABLE.SUMMARY
  Reason: 
    Enquiries have been made obsolete. 

46. Removal of Consol key files 
 
Keyword/Name: 
a.	RE.CONSOL.MM 
b.	RE.CONSOL.MM.SEQU 
c.	RE.CONSOL.LD 
d.	RE.CONSOL.ACCOUNT 
e.	RE.CONSOL.PD 
f.	RE.CONSOL.PD.SEQU 
g.	RE.CONSOL.LOAN 
h.	RE.CONSOL.LOAN.SEQU 
i.	RE.CONSOL.SEC 
j.	RE.CONSOL.FOREX 
k.	RE.CONSOL.LIMIT 
l.	RE.CONSOL.LC 	 
m.	RE.CONSOL.MD 
n.	RE.CONSOL.MG 
o.	RE.CONSOL.SL 
p.	RE.CONSOL.NDF 
q.	RE.CONSOL.IA 
r.	RE.CONSOL.IC 
s.	RE.CONSOL.AL 
t.	RE.CONSOL.AZ 
Resolution: 
         RE.CONSOL.CONTRACT 
Description: 
   The 	routines which are reading     RE.CONSOL.MM, RE.CONSOL.LD 	or RE.CONSOL.ACCOUNT should read the file RE.CONSOL.CONTRACT. 
Reason: 
 The concat file for consol entries has been made obsolete. 
Example: 
CASE 1:  
	Change the READ for RE.CONSOL.ACCCOUNT, RE.CONSOL.LOAN, etc to RE.CONSOL.CONTRACT. But the id should be same.  
	Also perform OPF for RE.CONSOL.CONTRACT and remove CALL OPF for RE.CONSOL.ACCOUNT, RE.CONSOL.LOAN.  
	Don’t change the Record variable(e.g.: R.RE.CONSOL.ACCOUNT)  
 
Before Change: 
 
 FN.RE.CONSOL.ACCOUNT = “F.RE.CONSOL.ACCOUNT‟ 
 F.RE.CONSOL.ACCOUNT = ‘’ 
CALL OPF (FN.RE.CONSOL.ACCOUNT, F.RE.CONSOL.ACCOUNT)  
CALL F.READ (FN.RE.CONSOL.ACCOUNT, YCONSOL.KEY, R.RE.CONSOL.ACCOUNT, 
F.RE.CONSOL.ACCOUNT, CONACC.ERR)  
 
After Change: 
FN.RE.CONSOL.CONTRACT = ‘’F.RE.CONSOL.CONTRACT‟  
F.RE.CONSOL.CONTRACT = „‟   
CALL OPF (FN.RE.CONSOL.CONTRACT, F.RE.CONSOL.CONTRACT) 
 
 CALL F.READ (FN.RE.CONSOL.CONTRACT, YCONSOL.KEY, R.RE.CONSOL.ACCOUNT, 
F.RE.CONSOL.CONTRACT, CONACC.ERR)  
 
CASE 2: SELECT Scenarios.  
	In case select happen in the files RE.CONSOL.ACCOUNT, RE.CONSOL.LOAN, etc.  
 
Example 1: 
 
Before Change 
 SEL.CMD=”SELECT F.RE.CONSOL.ACCOUNT”  
After Change 
SEL.CMD=”SELECT F.RE.CONSOL.CONTRACT WITH @ID LIKE AC...”  
	Because the RE.CONSOL.ACCOUNT is related to only for product account. So we have 	to 	retrieve 	using 	select 	on 	account 	related 	records 	from RE.CONSOL.CONTRACT.  
 
	Similarly for other RE.CONSOL.XXX files have to be done as mentioned below.  
 
Before Change  
SEL.CMD=”SELECT F.RE.CONSOL.LOAN”  
After Change  
SEL.CMD=”SELECT F.RE.CONSOL.CONTRACT WITH @ID LIKE LD...”  
Before Change  
SEL.CMD=”SELECT F.RE.CONSOL.SEC”  
After Change  
SEL.CMD=”SELECT F.RE.CONSOL.CONTRACT WITH @ID LIKE SC...”  
Before Change  
SEL.CMD=”SELECT F.RE.CONSOL.MM”  
After Change 
 SEL.CMD=”SELECT F.RE.CONSOL.CONTRACT WITH @ID LIKE MM...”  
Before Change  
SEL.CMD=”SELECT F.RE.CONSOL.PD”  
After Change  
SEL.CMD=”SELECT F.RE.CONSOL.CONTRACT WITH @ID LIKE PD...”  
Before Change  
SEL.CMD=”SELECT F.RE.CONSOL.FOREX”  
After Change  
SEL.CMD=”SELECT F.RE.CONSOL.CONTRACT WITH @ID LIKE FX...”  
Example 2:  
Before Change  
SEL.CMD=”SELECT F.RE.CONSOL.ACCOUNT WITH @ID LIKE 6001” 
SEL.CMD=”SELECT F.RE.CONSOL.ACCOUNT WITH @ID LIKE USD”  
After Change:  
SEL.CMD=”SELECT F.RE.CONSOL.CONTRACT WITH @ID LIKE AC...6001...” SEL.CMD=”SELECT F.RE.CONSOL.CONTRACT WITH @ID LIKE AC...USD...” 

47. Usage of command SHELL 
Keyword/Name: 
 	SHELL 
Resolution: 
 	Should be reviewed 
Description: 
 The SHELL command used to identify the UNIX scripts to be executed in the jBASE programs/Subroutines. This should be properly reviewed using this command. 
This should not be used in local routines if it is not necessary. 

48. RE.LMM.BALANCES 
 
Keyword/Name:  	RE.LMM.BALANCES 
Resolution: 
 	EB.CONTRACT.BALANCES or LMM.ACCOUNT.BALANCES 
Description: 
 The balance and CRB information at contract level will now be held centrally in a table called EB.CONTRACT.BALANCES for each application. For each MM contract, a unique EB.CONTRACT.BALANCES record will be updated. This will hold contract currency, balances by asset types, daily movements for each asset types and Consol key. This file will be updated by core accounting process at authorization level.  
The application link file RE.CONSOL.MM is replaced by a central link file called RE.CONSOL.CONTRACT.  
CRB reporting will fetch the balances from EB.CONTRACT.BALANCES rather than from RE.LMM.BALANCES. With the introduction these central files, RE.LMM.BALANCES file will not be updated for MM. 

Example: 
 
$INCLUDE GLOBUS.BP I_F.RE.LMM.BALANCES  
 
FN.RE.LMM.BALANCES = 'F.RE.LMM.BALANCES'  
F.RE.LMM.BALANCES = ''  
CALL OPF (FN.RE.LMM.BALANCES, F.RE.LMM.BALANCES)  
 
CALL F.READ (FN.RE.LMM.BALANCES, Y.CNTR.ID, R.LMM.BAL, F.RE.LMM.BALANCES, 
MMERR)  
 
YR.AMT.BAL = R.LMM.BAL <RE.RLB.OUTS.CURR.PRINC>  
CUST = R.LMM.BAL< RE.RLB.CUSTOMER.NO> 
Should be replaced as 
 
$INCLUDE GLOBUS.BP I_F.LMM.ACCOUNT.BALANCES  
 
FN.LMM.ACCOUNT.BALANCES=“F.LMM.ACCOUNT.BALANCES” 
F.LMM.ACCOUNT.BALANCES=””   
CALL OPF (FN.LMM.ACCOUNT.BALANCES, F.LMM.ACCOUNT.BALANCES) 
 
CALL 	F.READ 	(FN. 	LMM.ACCOUNT.BALANCES, 	Y.CNTR.ID, 	R.LMM.BAL, 
F.LMM.ACCOUNT.BALANCES, LMMBAL.ERR)  
PRIN.AMTS = R.LMM.BAL< LD27.OUTS.CURR.PRINC>  
PRIN.CNT = DCOUNT (PRIN.AMTS, VM)  
YR.AMT.BAL = R.LMM.BAL< LD27.OUTS.CURR.PRINC, PRIN.CNT> 
 IDESC = “CUSTOMER” 
CALL IDESC (FN.LMM.ACCOUNT.BALANCES, Y.CNTR.ID, R.LMM.BAL, IDESC, RESULT) 
CUST = RESULT 
The field mapping will be as follows 
 
RE.LMM.BALANCES field(in old release) 	File Name 	Field Name 
DATE.FROM         	LMM.ACCOUNT.BALANCES  	 DATE.FROM                              
OUTS.OD.PRINC     	LMM.ACCOUNT.BALANCES  	 OUTS.OD.PRINC                          
OUTS.NAB.PRINC    	LMM.ACCOUNT.BALANCES  	 OUTS.PRINC.NAB                         
INTER.KEY         	EB.CONTRACT.BALANCES  	 INTEREST.KEY                           
INTER.SPREAD      	LMM.ACCOUNT.BALANCES  	 AC.INT.SPREAD                          
OUTS.ACCR.INT.REC 	LMM.ACCOUNT.BALANCES  	 COMMITTED.INT(amount will 
be in -ive)  
OUTS.ACCR.INT.PAY 	LMM.ACCOUNT.BALANCES  	 COMMITTED.INT(amount will 
be in +ive)  
OUT.ACCRUED.COMM  	LMM.ACCOUNT.BALANCES  	 OUTS.ACCRUED.COMM                  
PRIN.CCY          	EB.CONTRACT.BALANCES  	 CURRENCY                               
INT.CCY           	LMM.ACCOUNT.BALANCES  	 INT.CCY                                
INT.PERIOD.START  	LMM.ACCOUNT.BALANCES  	 START.PERIOD.INT                       
DATE.LAST.UPDATE  	EB.CONTRACT.BALANCES  	 DATE.LAST.UPDATE                       
OUTS.CURR.PRINC   	LMM.ACCOUNT.BALANCES  	 OUTS.CURR.PRINC                        
OUTS.FWD.PRINC    	LMM.ACCOUNT.BALANCES  	 OUTS.FWD.PRINC                         
 
49. AZ.ACCOUNT.HIST 
 
Keyword/Name:  	AZ.ACCOUNT.HIST 
Resolution: 
 	AZ.ACCOUNT$HIS 
Description: 
 Previously it was not possible to use the History restore option in AZ.ACCOUNT. The AZ.ACCOUNT.HIST file has now been made obsolete and the update for the final record of an AZ.ACCOUNT is now filed in AZ.ACCOUNT$HIS. The History restore functionality has now been enabled in the AZ.ACCOUNT application. However, History restore functionality is not allowed for live contracts. It is allowed only after matured, pre closed or reversed contracts. 

50.DX.PRICE & DX.PRICE.HISTORY 
Keyword/Name: 
 	DX.PRICE & DX.PRICE.HISTORY 
Resolution: 
 	DX.MARKET.PRICE & DX.MARKET.PRICE.HISTORY 
Description: 
 This enhancement has removed all reference to DX.PRICE and its associated routines in Derivatives module and now uses DX.MARKET.PRICE instead. Similarly, the price history file DX.PRICE.HISTORY is now substituted with DX.MARKET.PRICE.HISTORY. Now the existing parameterization of MAINT.DX.PRICE has been extended so that DX.MARKET.PRICE is updated (by Trade or order) irrespective of the parameter definition. 

51. SC.HOLD.POS 
 
Keyword/Name:  	SC.HOLD.POS 
Resolution: 
 	SC.HOLD.POS 



Description: 
 The file SC.HOLD.POS has been redesigned to prevent lock contention and performance issues. The file is now keyed by value date and transaction reference separated by a dot, for example 20090102.SCTRSC0900200001.  
The record layout consists of two fields, value date and transaction reference. If any local developments use this file heavily then users should consider adding secondary indices to the required fields.  
Once the RUN.CONVERSION service has completed the service CONV.SC.HOLD.POS.R08 should be started and run. 
 
 52.START.DAY.UPDATE 
Keyword/Name:  	SC.START.DAY.UPDATE 
Resolution: 
 	SC.START.DAY.UPDATE 
Description: 
 	This COB job has been amended to stop the repeated selects of 
SECURITY.POSITION to improve performance. In order to do this is sets up a list in a named common area for use in the called subroutine SC.START.DAY.UPDATE. If any local routines call SC.START.DAY.UPDATE in a similar manner (with subroutine argument ‘ALL’) then the routine must set up the same named common variable otherwise the routine will no longer function.  
The named common is I_SC.START.DAY.UPDATE.COMMON. 
The list should be set as follows;  
$INSERT I_DAS.COMMON  
SDU$SC.POS.ASSET.KEYS = dasAllIds  
THE.ARGS = ""  
DAS.TABLE.SUFFIX = ""  
CALL DAS('SC.POS.ASSET', SDU$SC.POS.ASSET.KEYS, THE.ARGS, DAS.TABLE.SUFFIX)  
IF E THEN  
SDU$SC.POS.ASSET.KEYS = ''  
END  

53.TABLE.TYPE 
Keyword/Name:  	TABLE.TYPE 
Resolution: 
 	TABLE.TYPE 
Description: 
The current Loading mechanism of the ETL tool has been changed based on the TABLE.TYPE of the DW table. To support this, a new field (TABLE.TYPE) has been created (by replacing a reserved field) in EB.DDL.SCHEMA to distinguish whether the table is a FACT or DIMENSION table.  
Two new columns RECORD_START_DATE and RECORD_END_DATE have been added for all the DIMENSION tables. 



54.FINAL.TERM 
Keyword/Name: 
 	FINAL.TERM, FINAL.MAT.DATE, RECALC.MAT.ON 
Resolution: 
 	AA.ARRANGEMENT
 
Description: 
Change product property class will now allow the arrangement to change from one
product to another product and in addition supports Rollover and Reset activities. The change product activity is based on a period or date. The field CHANGE.DATE.TYPE will have only one option (PERIOD). The attributes that are being used in Term amount property class like FINAL.TERM, FINAL.MAT.DATE, and RECALC.MAT.ON are no longer required and all the processing related to these attributes have been removed. 
A new attribute has been added in AA.ARRANGEMENT which will specify the status of the product. Three options will indicate the status of the product.  
PROCESSED – Once the arrangement moves from old product to new product, status of old product will be updated as PROCESSED.  
 
CURRENT – This indicates that the arrangement is running on the current product.  SCHEDULED – If the product is scheduled for a future date status is updated as SCHEDULED. 
Reason: 
 Any local code using the mentioned keywords in the property class is to modify as these fields are removed from TERM.AMOUNT property class. 
 
55.RE.CONTRACT.BALANCES 
Keyword/Name: 
 	RE.CONTRACT.BALANCES 
Resolution: 
 	EB.CONTRACT.BALANCES 
Description: 
 All the applications in the T24 system have their own CRF balance file, which is used in CRF processing. Contracts relating to IA uses RE.CONTRACT.BALANCES as its CRF balance file. This CRF balance file will be updated during the COB by the respective applications COB job. Now with this enhancement, there will be a new central CRF balance file called EB.CONTRACT.BALANCES, which will be used to hold the CRF balances for IA application. This will be updated during the COB processing whenever spec entries are raised for IA contracts. 
Note: 
The below update is given by Temenos. 
            The exact mapping of fields couldn’t be provided between RE.CONTRACT.BALANCES and EB.CONTRACT.BALANCES and hence, the balances of those previous release fields will not be retained. To meet your local requirement, instead of looking for mapping, kindly find the balances from the concerned balances files (LMM.ACCOUNT.BALANCES )and asset type wise outstanding (ECB) and revise your local development accordingly. 


56.POSITION.TABLE 
 
Keyword/Name:   	POSITION.TABLE 
Resolution: 
Description: 
 	The concat file made obsolete. 

57.CLOSE 
 
Keyword/Name: 
 	CLOSE 
Resolution: 
 	CLOSE 
Description: 
 The CLOSE statement is used to close a previously opened file when it is no longer needed. Item locks and file locks are released. It is good practice to hold open only those file descriptors that you wish to have constant access. The routines which use the command may needs to be changed to comply with T24 programming standards. 
 
  

58.WRITEV 
 
Keyword/Name: 
 	WRITEV 
 
Resolution: 
 	WRITEV 
Description: 
 This statement allows a program to write a specific field of a record in a previously opened file. This statement will cause any lock held on the record by this program to be released. The routine which use the command may needs to be changed to comply with T24 programming standards. 
 
59.OPENSEQ 
 
Keyword/Name: 
 	OPENSEQ 
Resolution: 
 	OPENSEQ 
Description: 
 This command opens a file for sequential writing and/or reading. The routine which use the command may needs to be changed to comply with T24 programming standards. 

60.DEBUG 
Keyword/Name: 
 	DEBUG 

Resolution: 
 	Should be removed 
Description: 
 This statement causes the executing program to enter the jBC debugger. The routine which uses this command cannot execute in T24 Desktop or T24 Browser. This command should be removed from the code to execute the routine in normal mode. 
 
61.LIQ.TRADE 
Keyword/Name: 
 	LIQ.TRADE 
Resolution: 
 	All reference to this application needs to be removed from COMPANY record. 
 
  
62.TRANS.JOURNAL2 
Keyword/Name:  	TRANS.JOURNAL2 
Resolution: 
 	TXN.JOURNAL.PRINT 
Description: 
 	The 	existing 	TRANS.JOURNAL2 	report 	will 	be 	replaced 	with 	a 	new 
TXN.JOURNAL.PRINT report routine, this will display the same data in the same format currently utilized by TRANS.JOURNAL2. 
 
 
63. POS.CON.DEL & POS.CON.SCAC 
Keyword/Name: 
 	POS.CON.DEL and POS.CON.SCAC 
Resolution: 
 	DAS 
Description: 
 	The concat files POS.CON.DEL (to obtain a list of records for depository) and POS.CON.SCAC (to obtain a list of records for SECURITY.POSITION) has been removed and to obtain a list of records the DAS routine should be used. 
 
For example, 
 
The READ or SELECT statement for POS.CON.SCAC should be replaced as below 
R.CONCAT = dasSecurityPositionSecurityAccount 
THE.ARGS = SAM.ID 
TABLE.SUFFIX = '' 
CALL DAS('SECURITY.POSITION',R.CONCAT,THE.ARGS,TABLE.SUFFIX)  
The list of SECURITY.POSITION ids will be returned in R.CONCAT 
 
The I_ files I_DAS.COMMON and I_DAS.SECURITY.POSITION should be included. 
 
64.REPO.POS.CONCAT 
Keyword/Name:  	REPO.POS.CONCAT 
Resolution: 
 	REPO.POSITION 
Description: 
 The concat file provided an index for the SECURITY.POSITION Id and the REPO contracts on the position. This data is a duplicate of information already held in REPO.POSITION and has been removed. 

65.SC.SETTLE.TXNS 
Keyword/Name:  	SC.SETTLE.TXNS 
Resolution: 
SC.SETTLE.CUST 
Description: 
 	This application has been removed as it was producing dead lock situations when actual settlement was used. It cross referenced the SECURITY.POSITION key with unsettled transactions. The same information can be obtained using enquiries based on SECURITY.TRANS records or SC.SETTLE.CUST. 


66.SC.ENT.VERIFIED/SC.ENT.ACTIVATED 
Keyword/Name: 
 	SC.ENT.VERIFIED/SC.ENT.ACTIVATED 
Resolution: 
 	Nil 
Description: 
 The concat files are made obsolete. These concat files were used to check whether the entitlement records created should be verified or not. 


67.SC.ENT.MANUAL 
Keyword/Name: 
 	SC.ENT.MANUAL 
Resolution: 
 	MANUAL.CREATION Field. 
Description: 
 	The concat file which holds the manually created entitlement Ids is made obsolete. Instead a new field MANUAL.CREATION (YES / NO) field is introduced in entitlement template which gets updated if it is created manually.

68.SECURITY.TRANS 
Keyword/Name:  	SECURITY.TRANS 
Resolution: 
 	SECURITY.TRANS 
Description: 
 The SECURITY.TRANS record is updated through Dairy and the Id is modified as DairyID*SessionID.SequenceNo. This is to avoid locking contention and to improve the scalability through multi threading concept. 
 A new concat file ENT.SEC.TRANS.REF is updated which holds the key to the SECURITY.TRANS records created for an entitlement. The key is same as the entitlement record. 
Reason: 
 If there is any local code accessing the ID of SECURITY.TRANS table care should be taken regarding the id formation. 
69.AZ.PENAL.CHARGE 
Keyword/Name:  	AZ.PENAL.CHRAGE 

Resolution: 
 	AZ.ACCT.BAL 
Description: 
 The application AZ.PENAL.CHARGE gets updated when installments of Savings plan deposits are deferred or if late payment fees are applicable. This application has now been removed and its contents have been moved to AZ.ACCT.BAL, the balance file of AZ account. This will be updated with late payment fee codes for savings plan.
 
70.LAST.EVENT.SEQ 
Keyword/Name:  	LAST.EVENT.SEQ 
Resolution: 
 	LAST.EVENT.SEQ 
Description: 
 The last event sequence number for CHEQUE.REGISTER has now been increased from 5 to 7 characters. 
Reason: 
 	The local routines were we read or update the field LAST.EVENT.SEQ in the CHEQUE.REGISTER has to be modified according to the new length. 

71.POS.CON.DP, POS.CON.SCAC and POS.CON.SEC 
Keyword/Name: 
 	POS.CON.DP, POS.CON.SCAC and POS.CON.SEC 
Resolution: 
 	DAS 
Description: 
  The Local routines making use of these back end files POS.CON.DP and POS.CON.SEC are made obsolete from R07 release and POS.CON.SCAC is made obsolete from R08 release. Hence to make the local routines R08 compliance we have to use DAS concept.  
SYNTAX:  
CALL DAS (APP.NAME, RETURNLIST, THE.ARGS, TABLE.SUFFIX)  
The core routine DAS has to be used in all places earlier where POS.CON.DP, POS.CON.SEC and POS.CON.SCAC are used. DAS routine has 4 incoming arguments and 1 outgoing argument, they are INCOMING ARGUMENT: 
APP.NAME:  
 
This argument uses the respective application name to retrieve the list.  
Ex: APP.NAME = 'SECURITY.POSITION' 
 RETURNLIST 
 This argument has to be passed with Query name that has been defined in the corresponding Common File GLOBUS.BP> I_DAS.SECURITY.POSITION.NOTES and I_DAS.SECURITY.POSITION. 
 If POS.CON.SEC list needed use the below query else if you need POS.CON.DP LIST use latter one. Sample query name is mentioned below, these will be changed based on the routine logic. 
 RETURNLIST = dasSecurityPositionCustomerSecurity, DasSecurityPositionCustomerDepository.  
THE.ARGS  

This argument has to input in array format delimited by FM. 
 For example:  
THE.ARGS = ID.COMPANY  
THE.ARGS<2> = ‘Input either Depository no or Security master no” 
 
TABLE.SUFFIX:  
Indicate which file has to used. Either NAU, OR HIS type. If null specified, then live file will be selected.  
TABLE.SUFFIX = $HIS or $NAU or null value.  
 
OUTGOING ARGUMENT:  
RETURNLIST: The extracted output list will present this argument.  
Change all the below routines as mentioned above DAS concept. Find below few test cases:  
I) POS.CON.SEC:  
 
Replace the before change code with the code block specified in the after Change section.  
Before Change: 
 Remove the following line of code:  
CALL F.READ (FN.POS.CON.SEC, SM.ID, R.POS.CON.SEC, F.POS.CON.SEC, RE.ERR)  After Change:  
Add the following lines of code:  
R.POS.CON.SEC = dasSecurityPositionCustomerSecurity  
THE.ARGS = ID.COMPANY  
THE.ARGS<2> = SM.ID  
TABLE.SUFFIX = ''  
CALL DAS ('SECURITY.POSITION', R.POS.CON.SEC, THE.ARGS, TABLE.SUFFIX)  Note: Don‟t forget to add the below Insert files in the changed routines.  $INCLUDE GLOBUS.BP I_DAS.COMMON  
$INCLUDE GLOBUS.BP I_DAS.SECURITY.POSITION  
 
II) POS.CON.DP:  
 
Replace the before change code with the code block specified in the after Change section.  
Before Change:  
CALL F.READ ('F.POS.CON.DP', K.DEPO, R.POSDP, F.POSDP, RE.ERR1)  After Change:  
R.POSDP = dasSecurityPositionCustomerDepository  
THE.ARGS = ID.COMPANY  
THE.ARGS<2> = K.DEPO  
TABLE.SUFFIX = ''  
CALL DAS ('SECURITY.POSITION', R.POSDP, THE.ARGS, TABLE.SUFFIX)  
Note: Don’t forget to add the below Insert files in the changed routines.  
$INCLUDE GLOBUS.BP I_DAS.COMMON  $INCLUDE GLOBUS.BP I_DAS.SECURITY.POSITION  
III) POS.CON.SCAC:  
 
Replace the before change code with the code block specified in the after Change section.  
Before Change:  
FN.POS.CON.SCAC = “F.POS.CON.SCAC‟  
F.POS.CON.SCAC = “‟  
CALL OPF (FN.POS.CON.SCAC, F.POS.CON.SCAC)  
CALL F.READ (FN.POS.CON.SCAC, K.SCAC, R.POS.CON.SCAC, F.POS.CON.SCAC, RE.ERR2) After Change:  
R.POS.CON.SCAC = dasSecurityPositionSecurityAccount  
THE.ARGS = K.SCAC  
TABLE.SUFFIX = ''  
CALL DAS ('SECURITY.POSITION', R.POS.CON.SCAC, THE.ARGS, TABLE.SUFFIX)  Note: Don‟t forget to add the below Insert files in the changed routines.  
$INCLUDE GLOBUS.BP I_DAS.COMMON  
$INCLUDE GLOBUS.BP I_DAS.SECURITY.POSITION 


 72. SC.RATING 
	 Keyword: 
 	SC.RATING 
Resolution: 
 	EB.RATING 
Description: 
 If you took note of the data in the record SC.RATING in LOCAL.REF.TABLE then, after the conversions enter the equivalent values in a new record for EB.RATING and verify it. 

73.RE.CONSOL.ACCOUNT 
 Keyword: 
 	RE.CONSOL.ACCOUNT 
 Resolution: 
 	RE.CONSOL.CONTRACT 
Description: 
 With the introduction of EB.CONTRACT.BALANCES as a central balance file for accounts and contract, the link file for each application is now also maintained in a new central file called RE.CONSOL.CONTRACT. 

74.SA.PREMIUM.INTEREST.WRK and SA.PRM.INTEREST.WRK 
Keyword:  
•	SA.PREMIUM.INTEREST.WRK 
•	SA.PRM.INTEREST.WRK 
Resolution: 
 	Nil. 
Description: 
 	The above mentioned files have become redundant and have been made obsolete. 

75.Single value to Multi value fields. 
Keywords: 
•	PHONE.1 
•	EMAIL.1 
•	SMS.1 
•	FAX 
Resolution: 
•	PHONE.1 
•	EMAIL.1 
•	SMS.1 
•	FAX 
Description: 
 On the customer application fields have been added/amended to reflect more closely the requirements of clients. The above existing fields in the customer application have been changed from single to multi-valued fields. 
Reason: 
 Local routines using these fields must take into consideration that these are multi-value fields now. 
 
76.Renaming Historic files SC.VEH and AM.VEH.GRP 
Keyword:  
•	SC.VEH  
•	AM.VEH.GRP 
Resolution: 
•	AM.VEH.MM  
•	AM.VEH.GRP.MM 
Description: 
 	Historic files SC.VEH.YYYYMM (Year Month file) is being renamed as 
AM.VEH.MM (Month file) and the historic group file AM.VEH.GRP.YYYYMM (Year Month file) is being renamed as AM.VEH.GRP (Month file). 

77.POS.MVMT.LWORK.DAY file
Keyword:
POS.MVMT.LWORK.DAY 
Resolution: 
 	POS.MVMT.HIST 
Description: 
 	The file POS.MVMT.LWORK.DAY file was previously a copy of the previous day’s POS.MVMT.TODAY entries. It held details of each update to the position file. The file is no longer updated since the information is already stored in POS.MVMT.HIST. This file holds details of the position movements for the number of days defined in the POS.MVMT.HIST field of the SPF record. Local enquiries using this file should be amended as follows to obtain the same results: 
FILE.NAME                        POS.MVMT.HIST 
FIXED.SELECTION            SEQ.NO NE ‘9999’ 
                                           BOOKING.DATE EQ !TODAY-1W 

78.Concat files MG.INTEREST.KEY and MG.RATE.FIX.DTE 
Keyword:  
•	MG.INTEREST.KEY file 
•	MG.RATE.FIX.DTE file 
Resolution: 
•	Selecting MG.MORTGAGE with field MG.INTEREST.KEY 
•	Selecting MG.MORTGAGE with field MG.RATE.FIX.FQY 
Description: 
 Concat files MG.INTEREST.KEY and MG.RATE.FIX.DTE are now obsolete and COB jobs do not use these files. 
MG.INTEREST.KEY was used to hold all mortgage contracts linked to a variable interest key. It is supplied for display purposes and also used by the mortgage COB processing routines. Since, while processing each contract, in event of key changes, this record needed to be locked and updated, there were performance issues. To overcome this, this file has been made obsolete. Interest key changes will now be done by selecting all mortgage contracts and processing based on the field MG.INTEREST.KEY in MG.MORTGAGE. 
MG.RATE.FIX.DTE was used to hold all mortgages contracts linked to variable key which had the id of MG.RATE.FIX.FQY. Variable rate changes were not be processed immediately but were processed on reaching this date. During COB processing this file needed to be locked and updated thus resulted in performance issues. Instead of picking contracts from this concat file, all contracts will be selected and processed based on the field MG.RATE.FIX.FQY in MG.MORTGAGE thus improving performance.  

 	79.Use FRA.DEAL instead of Concat file HEDGE.FRA 
Keyword:
          HEDGE.FRA 
Resolution: 
 	Select FRA.DEAL with TYPE= HEDGE 


Description: 
 	Concat file HEDGE.FRA is now obsolete. Instead, selection is done on FRA.DEAL with TYPE = HEDGE for processing in following routines. 
•	FRA.EOD.SELECT • FRA.SOD.SELECT 
•	FRA.EOD.HEDGE.DEALS.RPT • FRA.SOD.HEDGE.DEALS.RPT 
•	FRA.EOD.MTH.ACCRUALS.RPT 
•	FRA.SOD.MTH.ACCRUALS.RPT 	 
The following batch jobs are made obsolete: 
•	FRA.EOD.POST 
•	FRA.SOD.POST 
 
80. Removal concat file ACCOUNT.EXPOSURE 
Keyword/Name:   
 	ACCOUNT.EXPOSURE 
Resolution: 
 	EXPOSURE.DATES 
Description: 
 	Concat file ACCOUNT.EXPOSURE is now made obsolete. Local routines using this concat file to get the date should use the field EXPOSURE.DATES in the ACCOUNT table.
  
 81. MATREAD to F.MATREAD 
Keyword/Name:  
      MATREAD 
Resolution:  
      F.MATREAD 
Description:  
MATREAD statement allows a record stored in a jBASE file to be read and mapped directly into a dimensioned array. 
Reason:  
As part of standardization, MATREAD statements used in lower GLOBUS/T24 release local codes for (opening jBASE tables) will be replaced with T24 core routine F.MATREAD and in order to follow the transaction boundary. 	 
Example:  
MATREAD ARRAY FROM FILENAME, ID IF/ELSE CONTINUE Should be replaced as: 
CALL F.MATREADU(FILENAME, ID, MAT ARRAY, ARRAY.SIZE, FILEPATH, ERR, RETRY) 
 
82.MATWRITE to F.MATWRITE 
Keyword/Name:  
      MATWRITE 
Resolution:  
      F.MATWRITE 
Description:  
The MATWRITE statement transfers the entire contents of a dimensioned array to a specified record on disc.  
Reason:  
As part of standardization, MATWRITE statements used in lower GLOBUS/T24 release local codes for (opening jBASE tables) will be replaced with T24 core routine F.MATWRITE. This F.MATWRITE also follows the transaction boundary. 
 
Example:  
MATWRITE ARRAY ON FILENAME, ID  Should be replaced as: 
CALL F.MATWRITE (FILENAME, ID, MAT ARRAY, ARRAY.SIZE) 

83.DELETE to F.DELETE 
Keyword/Name:  
      DELETE 
Resolution:  
      F.DELETE 
Description:  
The DELETE statement will delete a record from a jBASE file.  
Reason:  
 As part of standardization, DELETE statements used in lower GLOBUS/T24 release local codes for (opening jBASE tables) will be replaced with T24 core routine F.DELETE and in order to follow the transaction boundary. 
Example:  
DELETE FILENAME, ID 
Should be replaced as: 
CALL F.DELETE (FILENAME, ID) 
 
84. DCOUNT() 
Keyword/Name:  
      DCOUNT 
Resolution:  
      Nil 
Description:  
The DCOUNT () function counts the number of field elements in a string that are separated by a specified delimiter.  The inline coding of DCOUNT should be avoided. 

Reason:  
To improve the performance 
 Example:  
DCOUNT (exp1, exp2)  Where exp1->evaluates to a string in which fields are to be counted.  
             Exp2->evaluates to the delimiter string used to count the fields.  
FOR I=1 TO DCOUNT (exp1, exp2)  
Should be replaced as 
 CNT = DCOUNT (exp1, exp2) 
  FOR I=1 TO CNT  
Note: The above change has to be done to avoid inline coding 

 85.REM 

Keyword/Name: 
   REM 
Resolution: 
   No need to remove for browser upgrades changes
 Description: 
CALL REM is used to display the error message stored in the common variable TEXT.  It works fine in Browser.  
Reason: 
It works fine in Browser.  
Example: 
 REM Y.MSG 
 can be leave as it is


86.Dropped Tables 
Keyword/Name: 
i) RE.CONSOL.LC.SEQU 
ii) RE.CONSOL.FOREX.SEQU 
iii) RE.CONSOL.LIMIT.SEQU 
iv) RE.CONSOL.MG.SEQU 
v) RE.CONSOL.SL.SEQU 
vi) RE.CONSOL.SWAP 
vii) RE.CONSOL.ACCT.HELD 

Resolution:    Not Known Description: 

The above mentioned tables are dropped in T24. The list has been received from Temenos. The replacements for these tables are not known and need to be analysed. 


87.OP.MODE field in SPF 
Keyword/Name: 
   OP.MODE field in SPF
 Resolution: 
   CO.BATCH.STATUS field of DATES 
Description: 
The introduction of Global Processing now means that the system could be online for one company and offline for another. The existing OP.MODE in SPF is no longer used, the on or offline status of a company is held in the DATES application, field 
CO.BATCH.STATUS 
Reason: 
  	OP.MODE in SPF is no longer used. 
 
88.OPEN.ACTUAL.BAL field in Account 
Keyword/Name: 
   OPEN.ACTUAL.BAL field in Account 
Resolution: 
   EB.GET.ACCT.BALANCE 
Description: 
The ACCOUNT field OPEN.ACTUAL.BAL and the file ACCT.ENT.TODAY are still maintained but any local routines which use them should be changed to use the routine EB.GET.ACCT.BALANCE for future compatibility. 


89. Removal of concat file RESO.POS.CONCAT 
Keyword/Name: 
   Removal of concat file RESO.POS.CONCAT 
Resolution: 
   Nil 
Description: 
This concat file provided an index for the SECURITY.POSITION Id and the reverse REPO contracts on the position. This data is a duplicate of information already held in RESO.POSITION and has been removed 

90.REBUILD.SCREEN 
 
Keyword/Name: 
REBUILD.SCREEN 
 
Resolution: 
No need to remove for browser upgrades changes 
 
Description: 
The browser will ignore this keyword 

91. Removal of F.JOURNAL 
 
Keyword/Name: 
Removal of F.JOURNAL 
 
Resolution: 
Nil 
 
Description: 
The system recovery application is no longer available as the JOURNAL file is no longer used. Recovery of transactions should be made using jBase or Oracle journals in the event of a recovery situation. 

92.AC.DATE.LAST.XX.XXXX is moved to EB.CONTRACT.BALANCES 
 
Keyword/Name: 
From R12 release, the following fields are removed from ACCOUNT 
I.	AC.DATE.LAST.CR.CUST 
II.	AC.AMNT.LAST.CR.CUST 
III.	AC.TRAN.LAST.CR.CUST 
IV.	AC.DATE.LAST.CR.AUTO 
V.	AC.AMNT.LAST.CR.AUTO 
VI.	AC.TRAN.LAST.CR.AUTO 
VII.	AC.DATE.LAST.CR.BANK 
VIII.	AC.AMNT.LAST.CR.BANK 
IX.	AC.TRAN.LAST.CR.BANK  	
X.	AC.DATE.LAST.DR.CUST 
XI.	AC.AMNT.LAST.DR.CUST 
XII.	AC.TRAN.LAST.DR.CUST 
XIII.	AC.DATE.LAST.DR.AUTO 
XIV.	AC.AMNT.LAST.DR.AUTO 
XV.	AC.TRAN.LAST.DR.AUTO 
XVI.	AC.DATE.LAST.DR.BANK 
XVII.	AC.AMNT.LAST.DR.BANK 
XVIII.	AC.TRAN.LAST.DR.BANK 
Resolution: 
All the fields are now available in EB.CONTRACT.BALANCES>INITIATOR.TYPE 
INITIATOR.TYPE - This field will be updated with CUST, AUTO or BANK and either debit or credit 
DATE.LAST 
AMNT.LAST 
TRAN.LAST 
 
Description: 
Any code referring to the above fields should be changed as below 
     CALL F.READ('F.EB.CONTRACT.BALANCES', <Account ID>, <R.account>, F.FILE, 
READ.ERROR)  
     Y.INITIATOR.TYPE= R.ACCOUNT<ECB.INITIATOR.TYPE> 
     LOCATE 'AUTO-DR' IN Y.INITIATOR.TYPE<1,1> SETTING AD.POS THEN 
Y.CR.DATE=R.ECB<ECB.DATE.LAST,AD.POS> 
	         	Y.CR.AMT=R.ECB<ECB.AMNT.LAST,AD.POS> 
     END ELSE 
      AD.POS = ''      
     END    
     LOCATE 'AUTO-CR' IN Y.INITIATOR.TYPE<1,1> SETTING AC.POS THEN 
Y.CR.DATE=R.ECB<ECB.DATE.LAST,AC.POS> 
	         	Y.CR.AMT=R.ECB<ECB.AMNT.LAST,AC.POS> 
     END ELSE 
           AC.POS = '' 
     END  
     LOCATE 'BANK-DR' IN Y.INITIATOR.TYPE<1,1> SETTING BD.POS THEN 
Y.CR.DATE=R.ECB<ECB.DATE.LAST,BD.POS> 
	         	Y.CR.AMT=R.ECB<ECB.AMNT.LAST,BD.POS> 
     END ELSE 
           BD.POS = '' 
     END  
     LOCATE 'BANK-CR' IN Y.INITIATOR.TYPE<1,1> SETTING BC.POS THEN 
Y.CR.DATE=R.ECB<ECB.DATE.LAST,BC.POS> 
	         	Y.CR.AMT=R.ECB<ECB.AMNT.LAST,BC.POS> 
     END ELSE 
           BC.POS = '' 
     END  
     LOCATE 'CUST-CR' IN Y.INITIATOR.TYPE<1,1> SETTING CD.POS THEN 
Y.CR.DATE=R.ECB<ECB.DATE.LAST,CD.POS> 
	         	Y.CR.AMT=R.ECB<ECB.AMNT.LAST,CD.POS> 
     END ELSE 
           CD.POS = '' 
     END    
     LOCATE 'CUST-CR' IN Y.INITIATOR.TYPE<1,1> SETTING CC.POS THEN 
Y.CR.DATE=R.ECB<ECB.DATE.LAST,CC.POS> 
	         	Y.CR.AMT=R.ECB<ECB.AMNT.LAST,CC.POS> 
     END ELSE 
           CC.POS. = '' 
     END     	 
93.ACCOUNT balances fields moved to EB.CONTRACT.BALANCES 
 
Keyword/Name: 
From R12, the following fields are moved from ACCOUNT to EB.CONTRACT.BALANCES 
I.	AC.ONLINE.ACTUAL.BAL 
II.	AC.WORKING.BALANCE 
III.	AC.ONLINE.CLEARED.BAL 
IV.	AC.OPEN.AVAILABLE.BAL 
V.	OPEN.ACTUAL.BAL 
 
Resolution 
All fields mentioned above must now be referred in EB.CONTRACT.BALANCES. 
Balance fields from R12 onwards need not be referred from ECB. Instead data can be maintained in ACCOUNT and ECB with the help of PARAMETER setup in ACCOUNT.PARAMETER in R13 and in case of R12 - PGM.FILE setup along with a patch/update 
 
Description: 
Any code referring to the above fields should be changed as below. 
	     	CALL 	F.READ('F.EB.CONTRACT.BALANCES', 	<Account 	ID>, 	R.ECB, 	F.FILE, 
READ.ERROR) 
WORKING.BAL = R.ECB< ECB.WORKING.BALANCE> 
AVAILABLE.BAL = R.ECB< ECB.OPEN.AVAILABLE.BAL> 
ACTUAL.BAL = R.ECB< ECB.ONLINE.ACTUAL.BAL> 
CLEARED.BAL = R.ECB< ECB.ONLINE.CLEARED.BAL > 
OPEN.ACT.BAL = R.ECB< ECB.OPEN.ACTUAL.BAL> 
 
Kindly Note for any multi-value field level updates 
 
Note: Avoid use of DBR to fetch account balances from ECB. ECB will not be created for a new account unless there is a transaction in T24 using that account or during COB. Hence if there is any DBR used in validation routine before ECB is created for that account, system will throw error message saying “Missing EB.CONTRACT.BALANCES”. 
Consider the following example: 
1.	New account is created on 6th Aug 2013 
2.	No ECB for that account exists on 6th Aug 2013 as it will be created only during COB on 6th Aug 2013. 
3.	Take a FT version where there a validation routine in DEBIT.ACCT.NO to check the balance (using DBR) of the account that is entered. 
4.	Input FT transaction on 6th Aug 2013 using the above version; give the new account number in the field DEBIT.ACCT.NO. 
5.	The validation routine will throw error message “Missing EB.CONTRACT.BALANCES” 
 
There will not be any issue if F.READ is used in such validation routines to get the balances from ECB.  

94.ACCOUNT 	Movement 	& 	Account 	Date 	fields 	is 	moved 	to EB.CONTRACT.BALANCES 
Keyword/Name: 
From R12, the following fields are moved from ACCOUNT to EB.CONTRACT.BALANCES 
I.	AC.AVAILABLE.DATE 
II.	FIRST.AF.DATE 
III.	NEXT.AF.DATE 
IV.	NEXT.EXP.DATE 
V.	AC.AV.NAU.DB.MVMT 
VI.	AC.AV.NAU.CR.MVMT 
VII.	AC.AV.AUTH.DB.MVMT 
VIII.	AC.AV.AUTH.CR.MVMT 
IX.	FORWARD.MVMTS 
X.	DATE.EXPOSURE 
Resolution 
All fields must now be referred to EB.CONTRACT.BALANCES 
Description: 
Any code referring to the above fields should be changed as below. 
	     	CALL 	F.READ('F.EB.CONTRACT.BALANCES', 	<Account 	ID>, 	R.ECB, 	F.FILE, 
READ.ERROR) 
NAU.DB.MVMT = R.ECB<ECB.AV.NAU.DB.MVMT> 
AUTH.CR.MVMT = R.ECB<ECB.AV.NAU.CR.MVMT> 
AUTH.CR.MVMT = R.ECB<ECB.AV.AUTH.CR.MVMT> 
AUTH.DR.MVMT = R.ECB<ECB.AV.AUTH.DB.MVMT> 
AC.AVAILABLE.DATE = R.ECB<ECB.AVAILABLE.DATE> 
FIRST.AF.DATE = R.ECB<ECB.FIRST.AF.DATE> 
NEXT.AF.DATE = R.ECB<ECB.NEXT.AF.DATE> 
NEXT.EXP.DATE = R.ECB<ECB.NEXT.EXP.DATE> 
FORWARD.MVMT = R.ECB<ECB.FORWARD.MVMTS> 

DATE.EXPOSURE = R.ECB< ECB.EXPOSURE.DATES> 
 
Kindly Note for any multi-value field level updates 
95. TELLER.PARAMETER id format changed 
 
Keyword/Name: 
 
TELLER.PARAMTER id is changed from SYSTEM to company code. 
 
Resolution 
TELLER.PARAMTER id is changed from SYSTEM to company code. 
 
Description: 
 
Record id 'SYSTEM' is changed and the record ids will be in the format of company code. 
 
Eg: 
 
In G13, TELLER.PARAMETER>SYSTEM 
In R12, TELLER.PARAMETER>LV001001 

96.Core routine EB.ACCT.ENTRY.LIST 
 
Keyword/Name: 
 
Core routine EB.ACCT.ENTRY.LIST 
 
Resolution 
 
Before calling the core routine, store the Account Number in a temporary variable and  pass the temporary variable to this routine 
 
Description: 
EB.ACCT.ENTRY.LIST routine has undergone some core changes and it must be changed if used in any local developments.  
After calling this core routine, the first argument of the routine ACCOUNT.NUMBER is changed and appended with some other values. So, the account number should be stored in temporary variable and temporary variable should be passed to this routine. 
Reason: 
In R13 the logic has changed. If the ACCOUNT.NUMBER is passed then it will be returned with values appended to the same variable separated by FM. So we cannot use the same variable which is passed as input argument again after output argument. 
 
If you use ACCOUNT.NUMBER directly, then after calling EB.ACCT.ENTRY.LIST the out argument will be corrupted with other values. 
 
Example: 
Existing 
CALL EB.ACCT.ENTRY.LIST(ACCOUNT.NUMBER,FROMDATE,TODATE,Y.STMT.LIST,'',ERR) 
Should be changed to 
 
Y.AC.NO = ACCOUNT.NUMBER 
CALL EB.ACCT.ENTRY.LIST(Y.AC.NO,FROMDATE,TODATE,Y.STMT.LIST,'',ERR) 
 
 
97.DIV() FUNCTION 
 
Keyword/Name: 
DIV() function 
 
Resolution 
 
DIV function in TAFC returns the full value with decimal points.DIV function in universe returns only value before decimal point. 
 
Description: 
 
DIV function in TAFC returns the full value with decimal points. DIV function in universe returns only the value before decimal point. 
 
Code: 
AMT.1 = "10" 
AMT.100 = DIV ( AMT.1 , 1000000 ) 
AMT.100 will be 0.00001 in TAFC. But in Universe AMT.100 will be 0 
 
Code change: 
INT() function used to get the value: 
AMT.1 = "10" 
AMT.100 = DIV ( AMT.1 , 1000000 ) 
AMT.100 = INT(AMT.100) 
AMT.100 will be 0 after the INT function. 




 98.TELLER field NEW.CUST.BALANCE 
 
Keyword/Name: 
NEW.CUST.BALANCE field from TELLER application
Resolution 
The field NEW.CUST.BALANCE is changed to NEW.CUST.BAL in TELLER application. 
Description: 
 
The field NEW.CUST.BALANCE is changed to NEW.CUST.BAL in TELLER application 

99.F.DE.O.HOLD.KEY 
 
Keyword/Name:
F.DE.O.HOLD.KEY 
Resolution 
Use the select command "SELECT F.DE.O.HOLD.KEY WITH F1 EQ 'HOLD'" 
Description: 
In G13, a record KEYLIST will be there in F.DE.O.HOLD.KEY which has all the delivery message ids which are in hold. But in R12, there is no KEYLIST record in F.DE.O.HOLD.KEY. The hold delivery messages will be selected using the select command "SELECT F.DE.O.HOLD.KEY WITH F1 EQ 'HOLD'" 

100. SCAC.EXTRACT 

Keyword/Name:
       SCAC.EXTRACT
 Resolution: 
 	DAS 


Description: 
 	The concat file SCAC.EXTRACT has been removed and the DAS routine should be used. 
 For example,  
The READ or SELECT statement for SCAC.EXTRACT should be replaced as below 
R.SCAC.EXTR      = dasSafecustodyExtractForPortfolio  
THE.ARGS         = SAM.ID 
DAS.TABLE.SUFFIX = "" 
CALL DAS('SAFECUSTODY.EXTRACT', R.SCAC.EXTR, THE.ARGS, DAS.TABLE.SUFFIX)   The list of SAFECUSTODY.EXTRACT ids will be returned in R.SCAC.EXTR 
 
The I_ files I_DAS.COMMON and I_DAS. SAFECUSTODY.EXTRACT should be included. 
 
101.	 $IFDEF function 
 
Keyword/Name: 
$IFDEF function 
Resolution: 
 $IFDEF should be changed to IF…THEN 
Description: 
 $IFDEF is same like IF THEN ex: $IFDEF VAR 
             PRINT ' ' 
$ENDIF 
 
above condition should be changed to 
 
IF VAR THEN 
       PRINT ' ' 
END 

102.	LD.FIRST.DAY.ACCRUAL 	field 	in 	LD.LOANS.AND.DEPOSITS application 
 
Keyword/Name: 
LD.FIRST.DAY.ACCRUAL field in LD.LOANS.AND.DEPOSITS application 
 
Resolution: 
Refer ACCRUAL.PARAM field in LD.LOANS.AND.DEPOSITS application 
 
Description: 
 
1)	In LD, field FIRST.DAY.ACCRUAL is now changed to ACCRUAL.PARAM field.  
2)	When ACCRUAL.PARAM field value is '' , this means FIRST.DAY.ACCRUAL = "YES".  
3)	ACCRUAL.PARAM field points to EB.ACCRUAL.PARAM application and INCLUDE.START.DATE field of EB.ACCRUAL.PARAM implies the FIRST.DAY.ACCRUAL to YES or NO 

103.	MM.FIRST.DAY.ACCRUAL 	field 	in 	MM.MONEY.MARKET application 
 
Keyword/Name: 
MM.FIRST.DAY.ACCRUAL field in MM.MONEY.MARKET application 

Resolution: 
Refer ACCRUAL.PARAM field in MM.MONEY.MARKET application 
 
Description: 
1)	In MM, field FIRST.DAY.ACCRUAL is now changed to ACCRUAL.PARAM field.  
2)	When ACCRUAL.PARAM field value is '' , this means FIRST.DAY.ACCRUAL = "YES".  
3)	ACCRUAL.PARAM field points to EB.ACCRUAL.PARAM application and INCLUDE.START.DATE field of EB.ACCRUAL.PARAM implies the FIRST.DAY.ACCRUAL to 
YES or NO 
 
	104.	Core routine FT.FIND.COND.NO 
 
Keyword/Name: 
Core routine FT.FIND.COND.NO 

Resolution: 
New argument is added to pass charge account, so that it returns the customer charge relevant to the company of the charge account 
Description: 
New argument is added to pass charge account, so that it returns the customer charge relevant to the company of the charge account 
 
 105.	BIC field of DE.BIC 
 
Keyword/Name: 
BIC field of DE.BIC 
Resolution:
BIC field of DE.BIC - changed to RECORDKEY field of DE.BIC 
 
Description: 
 
BIC field of DE.BIC - changed to RECORDKEY field of DE.BIC 
 
 
	106.	SETREM 
 
Keyword/Name: 
SETREM 
 
Resolution: 
Assign the variable to itself 
 

Description: 
 
Assign the variable to itself 
For example SETREM 0 TO ADDRESSES should be changed as 
ADDRESSES = ADDRESSES 
 
 
	107.	ACCT.GEN.CONDITION 
 
Keyword/Name: 
ACCT.GEN.CONDITION 
Resolution: 
 ACCT.GEN.CONDITION 
Description: 
 The fields such as CATEGORY.CODE, ACCT.PRODUCT, RESIDENCE & SECTOR.CODE has been made obsolete, instead in new release the structure has been changed below. 
2.	1. 1 ITEM........ ACCOUNT>CATEGORY 
3.	1. 1 PRIORITY.... 1 
4.	1. 1 VALUE....... 1000                Current AccountÿNorñóinu ko 
2.	1. 2 ITEM........ ACCOUNT>ACCT.PRODUCT 
3.	1. 2 PRIORITY.... 2 
2.	1. 3 ITEM........ CUSTOMER>RESIDENCE 
3.	1. 3 PRIORITY.... 3 
4.	1. 3 VALUE....... LV                  Republic of LatviaÿLatvijas 
2.	1. 4 ITEM........ CUSTOMER>SECTOR 
3.	1. 4 PRIORITY.... 4 
4.	1. 4 VALUE....... 1100                BankÿBankaÿ  ª 


	108.	Core routine LD.TAX.CALC 

Keyword/Name: 
LD.TAX.CALC 
Resolution: 
A new argument is added to return total tax amount in local currency 
Description: 
A new argument is added to return total tax amount in local currency 
 
 
	109.	NR.PARAMETER 	fields 	NR.PARAM.GLOBUS.TYPE 	and NR.PARAM.GLOBUS.LOCATION 
 
Keyword/Name: 
NR.PARAMETER fields NR.PARAM.GLOBUS.TYPE and NR.PARAM.GLOBUS.LOCATION 
Resolution: 
NR.PARAM.T24.TYPE should be used instead of NR.PARAM.GLOBUS.TYPE and  
NR.PARAM.T24.LOCATION should be used instead of NR.PARAM.GLOBUS.LOCATION 
Description: 
NR.PARAM.T24.TYPE should be used instead of NR.PARAM.GLOBUS.TYPE and  
NR.PARAM.T24.LOCATION should be used instead of NR.PARAM.GLOBUS.LOCATION 
 

	110.	FIX () function

Keyword/Name: 
 FIX() function 
 
Resolution: 
DROUND() function 
 
Description:
DROUND() function should be used instead of FIX() function 

For example 
FIX(CALC.PERCENT,2) 
Should be changed to 
DROUND(CALC.PERCENT,2) 

111.	 FOLD function 

Keyword/Name:   
FOLD function 
 
Resolution: 
CALL !FOLD() is not supported in TAFC. New routine to be written in which FOLD function will be used. 
Description: 
CALL !FOLD() is not supported in TAFC. New routine to be written in which FOLD function will be used 
For eg. 
SUBROUTINE PRX.FOLD(RESULT,ARR.VALUE,LEN.STRING) 
$INCLUDE T24.BP I_COMMON 
$INCLUDE T24.BP I_EQUATE 
RESULT = FOLD(ARR.VALUE,LEN.STRING) 
RETURN 
END 
 
	112.	getpid function 
Keyword/Name: 
getpid function 
 
Resolution: 
Assign the variable to itself 
 
Description: 
In Universe 
 
DECLARE GCI getpid 
PID = getpid() 
 
While upgrading to jBase the above statement should be changed to 
 
PID = @PID 
	113.	LIST.READU command 

 Keyword/Name:  
LIST.READU command 
 
Resolution: 
GET.USER.STAT core routine should be called 
 
Description: 
To get the locked user ids, the below code should be changed when upgrade is done from Universe to jBase.  
EXECUTE 'LIST.READU' CAPTURING USER.LOCKS 
 
Should be changed to 
CALL GET.USER.STAT(LCK.STAT,LCK.USER) LOCK.USER.NAME = FIELD(LCK.USER,'-',1,1) 
 
	114.	@SYSTEM.RETURN.CODE 
 
Keyword/Name: 
 @SYSTEM.RETURN.CODE 
 
Resolution: 
Comment the line where the @SYSTEM.RETURN.CODE=0 is encountered 
 
Description: 
When the system is upgraded from Universe to jBase, Comment the line where the 
@SYSTEM.RETURN.CODE=0 is encountered and check the remaining usage of 
@SYSTEM.RETURN.CODE is working fine 
 
 
	115.	SIGN.ON.CHECK record of F.LOCKING 

Keyword/Name:   
SIGN.ON.CHECK record of F.LOCKING 
 
Resolution: 
 Disabled and changed to Token mechanism 
 
Description: 
In Universe, there is a SIGN.ON.CHECK record in F.LOCKING. But in Jbase, it is made obsolete and token mechanism is handled.  
Based on the usage of SIGN.ON.CHECK, the code conversion should be made in Jbase. For example, If SIGN.ON.CHECK record is read to check the locked user details, and then 
GET.USER.STAT core routine can be used. 
 
	116.	FILEINFO function 
 
Keyword/Name:  
FILEINFO function 
 
Resolution: 
In jBase, the second argument of the FILEINFO function can’t be given as common variables. It should be given as numeric value. 
Description: 
 In jBase, the second argument of the FILEINFO function can’t be given as common variables. It should be given as numeric value. 

For example, 
In Universe, FILEINFO(F.BUF, FINFO$IS.FILEVAR) can be used. FINFO$IS.FILEVAR is one of the common variable for FILEINFO. But in jBase, the common variable can’t be used directly with FILEINFO. Instead, the corresponding numeric value should be used. 
 
For example 

FILEINFO(F.BUF, FINFO$IS.FILEVAR) 
Should be changed to 
FILEINFO(F.BUF, 0) 
 
 
	117.	BSCAN 

Keyword/Name:   
BSCAN 
 
Resolution: 
BSCAN in Universe should be changed to OPENINDEX WITH SELECT in jBase 
 
Description: 
 
For example, there is a BSCAN code in Universe as below 
 
FIELD.SCAN = ''; LIST.SCAN = ''; SCAN.ERROR = '' 
 
BSCAN FIELD.SCAN, LIST.SCAN V$FROM F.SCAN.FILE, SCAN.FIELD : CONTRACT.ID USING SCAN.IND V$RESET BY 'A' ELSE 
 
      RETURN 
  
END 
 
Where  
 
F.SCAN.FILE holds the Scan file name 
SCAN.IND holds the Index Field name 
CONTRACT.ID holds the record id 
 
 
The above code should be changed as below in jBase 
 
SEL.VALUE = SCAN.FIELD : CONTRACT.ID 
INDEX.VAR = '' ; INDEX.VALUE = '' ; REC.ID = '' 
 
OPENINDEX FN.RE.CRF.LB0033,SCAN.IND TO INDEX.VAR THEN 
SELECT INDEX.VAR ATKEY SEL.VALUE 
LOOP 
      	 	SEARCH.VALUE = '0' 
      	 	READNEXT KEY INDEX.VALUE,REC.ID ELSE INDEX.VALUE = '' 
      	 	SEARCH.VALUE = INDEX(INDEX.VALUE,SEL.VALUE,1) 
     	 	WHILE SEARCH.VALUE NE '0' DO 
      	 	LIST.SCAN<-1> = REC.ID 
            REPEAT 
END ELSE 
 	RETURN 
END 
 
	118. USER.SMS.GROUP 

Keyword/Name:   
USER.SMS.GROUP 
Resolution: 
EB.USER.ROLES is an alternate option for USER.SMS.GROUP. EB.USER.ROLES is introduced in R13.  
Description: 
It is not mandatory to change the USER.SMS.GROUP to EB.USER.ROLES. If the bank prefers, it can be changed.  
A new multi-value field USER.ROLES is introduced in USER application. User can be assigned to a particular role or multiple roles. EB.USER.ROLES is enhanced to define the file access permissions at the role level. Roles can now be defined in T24 with specific permissions and rights based on the business Role. 
 
 
	119.	DE.MM.I.END.OF.PERIOD 

 Keyword/Name: 
DE.MM.I.END.OF.PERIOD 

Resolution: 
DE.MM.I.END.OF.PERIOD application have made obsolete.  
Description: 
DE.MM.I.END.OF.PERIOD application have made obsolete.  
From R11, DE.EOP.INWARD multithread service will be used for archiving the delivery related files. 
 
	120.	DE.MM.O.END.OF.PERIOD 

 Keyword/Name: 
DE.MM.O.END.OF.PERIOD 
 

Resolution: 
DE.MM.O.END.OF.PERIOD application have made obsolete.  
 
Description: 
DE.MM.O.END.OF.PERIOD application have made obsolete.  
 
From R11, DE.EOP.OUTWARD multithread service will be used for archiving the delivery related files. 


121.	ASSET.TYPE field in IFRS.ACCT.METHODS 

Keyword/Name:  
ASSET.TYPE field in IFRS.ACCT.METHODS 
 
Resolution: 
From R11, ASSET.TYPE field in IFRS.ACCT.METHODS should be changed to fetch the value from the field ACCT.HEAD.TYPE  

Description: 
 
From R11, ASSET.TYPE field in IFRS.ACCT.METHODS should be changed to fetch the value from the field ACCT.HEAD.TYPE in the same application
 
122.	F.LIVE.WRITE 

 Keyword/Name:
F.LIVE.WRITE  
Resolution: 
Call to F.LIVE.WRITE from a template should be reviewed. 
 
Description: 
 
Call to F.LIVE.WRITE from a template should be reviewed. 

123.	AC.POSTING.RESTRICT 

Keyword/Name:  
AC.POSTING.RESTRICT 
 
Resolution: 
The field POSTING.RESTRICT in Account application is a multi value field from R13. 

 Description: 
 
The field POSTING.RESTRICT in Account application is a multi value field from R13. The existing code has to be amended to get the respective or needed posting restriction values.

 
	124.	DX.REP.POSITION and DX.MARKET.PRICE 
 
Keyword/Name: 
 
DX.REP.POSITION and DX.MARKET.PRICE 
 
Resolution: 
 
The format of the record keys of DX.REP.POSITION and DX.MARKET.PRICE is changed from R13. 
 
Description: 
 
Prior to R13, the record keys of DX.MARKET.PRICE and DX.REP.POSITION were updated as PRICE.SET *OPTION.TYPE/CONTRACT. CODE/TRADE.CCY/MATURITY.DATE/CALL.PUT/ STRIKE*USR.FLD.VAL1/USR.FLD.VAL2.  
 
The 	record 	key 	is 	now 	changed 	as 
PRICE.SET:OPTION.TYPE/CONTRACT.CODE/TRADE.CCY/MATURITY.DATE/CALL.PUT /STRIKE/DLV.CCY/OPTION.STYLE :USR.FLD.VAL1/USR.FLD.VAL2. 
 
	125.	STMT.PRINTED 

Keyword/Name: 
STMT.PRINTED 
 
Resolution: 
There is a change in ID format of passbook related Account records in STMT.PRINTED 
 
Description: 
Codes using STMT.PRINTED should be reviewed as there is a change in ID format of passbook related Account records in STMT.PRINTED. Not sure about the release. 
 
 
	126.	RE.MG.BALANCES 
 
Keyword/Name: 
RE.MG.BALANCES 
 
Resolution: 
EB.CONTRACT.BALANCES or MG.BALANCES 
 
Description: 
The fields of RE.MG.BALANCES table can be referred in EB.CONTRACT.BALANCES or MG.BALANCES applications as per below field mapping. 
 
Field mapping for RE.MG.BALANCES: 
 
RE.MG.BALANCES 	EB.CONTRACT.BALANCES 	MG.BALANCES 
DATE.LAST.UPDATED 	DATE.LAST.UPDATE 	 
CURRENCY 	CURRENCY 	 
FORWARD.PRINCIPAL 	OPEN.BALANCE+DEBIT.MVMT+CREDIT.MVM T (under the asset type FORWARDDB) 	 
CURRENT.PRINCIPAL 	OPEN.BALANCE+DEBIT.MVMT+CREDIT.MVM
T (under the asset type LIVEDB) 	PRIN.BALANCE 
(provided 
PRIN.EFF.DATE is less then 
TODAY) 
ACCRUED.INTEREST 	OPEN.BALANCE+DEBIT.MVMT+CREDIT.MVM
T (under the asset type 5100) 	OTS.INTEREST 
(multiplied by 1) 
SUSP.INT 	OPEN.BALANCE+DEBIT.MVMT+CREDIT.MVM
T (under the asset type 5100SP) 	OTS.SUSP.INT 
VALUE.DATE 	CONTRACT.VALUE.DATE 	 
MATURITY.DATE 	MAT.DATE (under the asset type LIVEDB) 	 
NEXT.INT.DATE 	 	END.INT.PERIO D 
INTEREST.RATE 	INTEREST.RATE 	 
INTEREST.KEY 	INTEREST.KEY 	 
INTEREST.DAY.BASIS 	INTEREST.BASIS 	 
CUSTOMER.NO 	CUSTOMER 	 
 
 
 
Note:  
1.	MATURITY.DATE field of RE.MG.BALANCES can also be referred from MATURITY.DATE field in MG.MORTGAGE table. 
2.	NEXT.INT.DATE field of RE.MG.BALANCES can also be referred from REPAYMENT.DATE (frequency need to be truncated) field in MG.MORTGAGE table. 
Reason:  
 
The concat file RE.MG.BALANCES has been made obsolete. 
 

Example: 
 
$INCLUDE GLOBUS.BP I_F.RE.MG.BALANCES   
                                                           
FN.RE.MG.BALANCES = 'F.RE.MG.BALANCES'                                                            
F.RE.MG.BALANCES = ''                                                                             
CALL OPF (FN.RE.MG.BALANCES, F.RE.MG.BALANCES)                                                    
 
CALL F.READ (FN.RE.MG.BALANCES, Y.CNTR.ID, R.RE.MG.BALANCES, 
F.RE.MG.BALANCES,MGERR)                                                                                            
 
YR.AMT.BAL = R.RE.MG.BALANCES<MG.RBL.CURRENT.PRINCIPAL>                                           
YR.INT.BAL = R.RE.MG.BALANCES<MG.RBL.ACCRUED.INTEREST>                                            
YR.MAT.DATE = R.RE.MG.BALANCES<MG.RBL.MATURITY.DATE>                                              
YR.NXT.INT.DTE = R.RE.MG.BALANCES<MG.RBL.NEXT.INT.DATE>                                           
 
The above code should be replaced as follows 
In the below example, we have given the corresponding TAM routines to be called to extract the individual fields value.                                                                          
 
 
$INCLUDE GLOBUS.BP I_F.EB.CONTRACT.BALANCES       
                                                 
FN.EB.CONTRACT.BALANCES = 'F.EB.CONTRACT.BALANCES'                                                
F.EB.CONTRACT.BALANCES = ''                                                                       
CALL OPF(FN.EB.CONTRACT.BALANCES, F.EB.CONTRACT.BALANCES)                                         
 
MG.ID = Y.CNTR.ID[1,12]                                                                           
CALL TAM.GET.LD.ECB.PRINCIPLE (MG.ID, LD.MG.AMT) ; * For calculating principal amount             
YR.AMT.BAL = MG.PR.AMT                                           
                                  
CALL TAM.GET.LD.ECB.ACCR.INT (MG.ID, MG.INT.AMT) ; * For calculating interest amount              
YR.INT.BAL = MG.INT.AMT                                                                           
 
* For calculating MATURITY.DATE & NEXT.INT.DATE use the below routine.                            
CALL TAM.MAT.INT.DATE.CHECK (MG.ID, MAT.DATE, NEXT.INT.DATE)                                      
YR.MAT.DATE = MAT.DATE                                                                            YR.NXT.INT.DTE = NEXT.INT.DATE                      
 
127. 	CHEQUES.STOPPED and CHEQUES.PRESENTED  

Keyword/Name: 
CHEQUES.STOPPED and CHEQUES.PRESENTED 
 
Resolution: 
CHEQUE.REGISTER.SUPPLEMENT 
 
Description: 
 
The local development which is using CHEQUES.STOPPED and CHEQUES.PRESENTED should be changed to CHEQUE.REGISTER.SUPPLEMENT. 
The id of CHEQUE.REGISTER.SUPPLEMENT is formed as <CHEQUE TYPE>.<ACCOUNT NUMBER>.<CHEQUE.NUMBER> 
Cheque Type for an account number can be extracted from CHEQUE.TYPE.ACCOUNT application. The id of CHEQUE.TYPE.ACCOUNT application is account number itself. 
CHEQUE.REGISTER.SUPPLEMENT has a field STATUS. This field holds the status of the Cheque whether it is Issued, Presented, Cleared, Exception, Unknown, Cancelled, Stopped and Returned. 
Reason: 
CHEQUES.STOPPED and CHEQUES.PRESENTED become obsolete 
Example: 
The code based on CHEQUES.STOPPED  
ID.CP = ACC.NO:'*':CHQ.NO 
CALL 	F.READ(FN.CHEQUES.STOPPED,ID.CP, 	REC.CHEQUES.STOPPED, 
F.CHEQUES.STOPPED, ERR.CHEQUES.STOPPED) 
IF NOT (ERR.CHEQUES.STOPPED) THEN 
    OUT.RESULT = REC.CHEQUES.STOPPED <CHQ.STP.PAYM.STOP.TYPE> 
END 
Should be replaced as 
 
CALL 
F.READ(FN.CHEQUE.TYPE.ACCOUNT,ACC.NO,R.CHEQUE.TYPE.ACCOUNT,F.CHEQUE.TYPE .ACCOUNT,CTA.ERR) 
IF R.CHEQUE.TYPE.ACCOUNT THEN 
   Y.CHQ.TYPE = R.CHEQUE.TYPE.ACCOUNT<CHQ.TYP.CHEQUE.TYPE>                                                                  
   NO.CHEQ.TYPE = DCOUNT(Y.CHQ.TYPE,@VM)                                                                                    
   FOR I=1 TO NO.CHEQ.TYPE                                                                                                  
            ID.CP = Y.CHQ.TYPE<I>:'.':ACC.NO:'.':CHQ.NO                                                             
CALL    
F.READ(FN.CHEQUE.REGISTER.SUPPLEMENT,ID.CP,R.CHEQUE.REGISTER.SUPPLE MENT,F.CHEQUE.REGISTER.SUPPLEMENT,CRS.ERR)   
            IF CRS.ERR THEN RETURN                                                                                               
            Y.STATUS = R.CHEQUE.REGISTER.SUPPLEMENT<CC.CRS.STATUS>                                                                           IF Y.STATUS EQ 'STOPPED' THEN                                                                                        
                OUT.RESULT =R.CHEQUE.REGISTER.SUPPLEMENT<CC.CRS.PAYM.STOP.TYPE>                                       
     	END                                                                                                                              BREAK 
   NEXT I          
 
 
	128. 	Renamed MB routines in R13 
 
Keyword/Name: 
MB.IC.RATE.CHANGE 
MB.EBR.DE.MSG.SUM 
MB.INT.TIME.RTN 
MB.FETCH.AC.JOINT.HOLDERS 
MB.DEF.TRIGGER.STATUS 
E.BM.MB.CUST.ADDRESS.BLD.RTN 
MB.DE.ADDRESS.PRINT 
MB.E.LOAN.REPORT 
MB.FD.DEF.VALUES 
MB.LD.REPAY 
MB.NOFILE.FX.OPEN.ALL 
MB.CHG.TO.NOS 
MB.E.LIM.ENQ.REC.BUILD 
MB.MGENQ 
MB.E.FETCH.AC.950.ADDRESS 
MB.E.TIME 
MB.CHQ.CHARGE.UPDATE 
MB.AI.DEF.DT.CCY 
MB.E.SL.ROLLOVER 
MB.LIST.LOANS 
MB.E.BUILD.AC.SWEEP 
MB.AI.LAST.LOGIN.TIME 
MB.IN.MSG.CHECK.RTN 
MB.E.CONSTRUCT.ENTRY 
MB.NOFILE.FX.OPEN.DETAIL 
MB.E.CALCULATE.PDBAL.DETAILS 
MB.E.FT.GET.MESSAGE.TYPE 
MB.PREFIX.SIGN 
MB.LD.DR.DEFAULT 
MB.E.BUILD.TXN.ENTRY 
MB.EBR.FD.RATES 
MB.E.BUILD.ENT.FWD 
MB.E.LC.GET.MESSAGE.TYPE 
MB.FX.SWAP.REF.FILTER 
MB.DE.ADDRESS.SWIFT 
MB.E.LD.BALANCES 
MB.CATEGORY.FILTER.RTN 
MB.E.TILL.ENT.TODAY 
MB.CHECK.LIMIT.ID 
MB.DX.AUTH.UNAUTH.DEALS 
MB.E.TXN.ENTRIES 
MB.AI.MSG.READ 
MB.E.TXN.ENTRY.FILL 
MB.E.SC.PF.HOLD.CONVERT 
MB.AI.MSG.SUB 
PMB.E.INSERT.SELECTION 
MB.LIST.CUSTOMER.ACCOUNTS 
MB.MM.PL.INTEREST.RATE 
MB.AI.TO.DAO 
MB.AI.BUILD.STMT.BOOK 
PMB.DX.MAT.DATES.RTN 
PROCESS.MENU.EXPANSION 
MB.TXN.ENTRY.BUILD 
 
Resolution: 
The above MB routines in R08 are renamed as follows in R13. 
R08 MB Rtns 	Same Renamed in R13 
MB.IC.RATE.CHANGE 	E.MB.IC.RATE.CHANGE 
MB.EBR.DE.MSG.SUM 	E.MB.EBR.DE.MSG.SUM 
MB.INT.TIME.RTN 	E.MB.INT.TIME.RTN 
MB.FETCH.AC.JOINT.HOLDERS 	E.MB.FETCH.AC.JOINT.HOLDERS 
MB.DEF.TRIGGER.STATUS 	V.MB.DEF.TRIGGER.STATUS 
E.BM.MB.CUST.ADDRESS.BLD.RTN 	E.MB.CUST.ADDRESS.BLD.RTN 
MB.DE.ADDRESS.PRINT 	V.MB.DE.ADDRESS.PRINT 
MB.E.LOAN.REPORT 	E.MB.LOAN.REPORT 
MB.FD.DEF.VALUES 	V.MB.FD.DEF.VALUES 
MB.LD.REPAY 	E.MB.LD.REPAY 
MB.NOFILE.FX.OPEN.ALL 	E.MB.NOFILE.FX.OPEN.ALL 
MB.CHG.TO.NOS 	E.MB.CHG.TO.NOS 
MB.E.LIM.ENQ.REC.BUILD 	E.LIM.ENQ.REC.BUILD 
MB.MGENQ 	E.MB.MGENQ 
MB.E.FETCH.AC.950.ADDRESS 	E.MB.FETCH.AC.950.ADDRESS 
MB.E.TIME 	E.MB.TIME 
MB.CHQ.CHARGE.UPDATE 	E.MB.CHQ.CHARGE.UPDATE 
MB.AI.DEF.DT.CCY 	V.MB.AI.DEF.DT.CCY 
MB.E.SL.ROLLOVER 	E.MB.SL.ROLLOVER 
MB.LIST.LOANS 	E.MB.LIST.LOANS 
MB.E.BUILD.AC.SWEEP 	E.MB.BUILD.AC.SWEEP 
MB.AI.LAST.LOGIN.TIME 	E.MB.AI.LAST.LOGIN.TIME 
MB.IN.MSG.CHECK.RTN 	V.MB.IN.MSG.CHECK.RTN 
MB.E.CONSTRUCT.ENTRY 	E.MB.CONSTRUCT.ENTRY 
MB.NOFILE.FX.OPEN.DETAIL 	E.MB.NOFILE.FX.OPEN.DETAIL 
MB.E.CALCULATE.PDBAL.DETAILS 	E.MB.CALCULATE.PDBAL.DETAILS 
MB.E.FT.GET.MESSAGE.TYPE 	E.MB.FT.GET.MESSAGE.TYPE 
MB.PREFIX.SIGN 	E.MB.PREFIX.SIGN 
MB.LD.DR.DEFAULT 	V.MB.LD.DR.DEFAULT 
MB.E.BUILD.TXN.ENTRY 	E.MB.BUILD.TXN.ENTRY 
MB.EBR.FD.RATES 	E.MB.EBR.FD.RATES 
MB.E.BUILD.ENT.FWD 	E.MB.BUILD.ENT.FWD 
MB.E.LC.GET.MESSAGE.TYPE 	E.MB.LC.GET.MESSAGE.TYPE 
MB.FX.SWAP.REF.FILTER 	E.MB.FX.SWAP.REF.FILTER 
MB.DE.ADDRESS.SWIFT 	V.MB.DE.ADDRESS.SWIFT 
MB.E.LD.BALANCES 	E.MB.LD.BALANCES 
MB.CATEGORY.FILTER.RTN 	E.MB.CATEGORY.FILTER.RTN 
MB.E.TILL.ENT.TODAY 	E.MB.TILL.ENT.TODAY 
MB.CHECK.LIMIT.ID 	V.MB.CHECK.LIMIT.ID 
MB.DX.AUTH.UNAUTH.DEALS 	E.MB.DX.AUTH.UNAUTH.DEALS 
MB.E.TXN.ENTRIES 	MB.E.TXN.ENTRIES 
MB.AI.MSG.READ 	E.MB.AI.MSG.READ 
MB.E.TXN.ENTRY.FILL 	E.MB.TXN.ENTRY.FILL 
MB.E.SC.PF.HOLD.CONVERT 	E.MB.SC.PF.HOLD.CONVERT 
MB.AI.MSG.SUB 	V.MB.AI.MSG.SUB 
PMB.E.INSERT.SELECTION 	E.MB.INSERT.SELECTION 
MB.LIST.CUSTOMER.ACCOUNTS 	E.MB.LIST.CUSTOMER.ACCOUNTS 
MB.MM.PL.INTEREST.RATE 	E.MB.MM.PL.INTEREST.RATE 
MB.AI.TO.DAO 	V.MB.AI.TO.DAO 
MB.AI.BUILD.STMT.BOOK 	E.MB.AI.BUILD.STMT.BOOK 
PMB.DX.MAT.DATES.RTN 	E.MB.DX.MAT.DATES.RTN 
PROCESS.MENU.EXPANSION 	E.MB.PROCESS.MENU.EXPANSION 
MB.TXN.ENTRY.BUILD 	E.MB.TXN.ENTRY.BUILD 
 
	129. 	Removed subroutines in R13 
 
Keyword/Name: 
MB.ADD.APP.FORMAT 
MB.DISP.BLANK 
MB.BEA.LIST.LOANS 
MB.IC.RT.CHG.BASIC 
MB.MARGIN.OPER.DISP 
MB.E.MG.BALANCE.ENQUIRY 
MB.GET.LOC.REF 
E.MB.GET.CREF.ID 
E.MB.UNSETTLED.TRADES 
MB.E.CUS.POS.NEXT.LEVEL 
PMB.SA.DX 
MB.MG.REPFWD.VIEW 
MB.IC.RT.CHG.MAR.DR 
MB.IC.RT.CHG.BAS.DR 
MB.INT.TYPE.RTN 
MB.E.TXN.ENTRY 
MB.IC.RT.CHG.MARGIN 
E.MB.FD.POOL.BULK.AUTH 
MB.TILL.ENTRIES.TODAY 
E.MB.GET.DIARYID 
MB.E.CONV.LIM.CUST 
E.MB.RATE.REVISION 
E.MB.LIAB.DRAWDOWN E.MB.GET.UNSETT.FLG 
E.MB.SC.VAL.SELECTION 
E.MB.SC.VAL.SELECTION 
MB.CREATE.AUTH.OFS.MSG 
MB.CM.FIND.MATCHED.ITEMS 
MB.CREATE.ZERO.AUTH.VERSION 
MB.FIND.CUST.NET.WORTH 
MB.EXTRACT.MENU.ITEMS 
V.DLD.CALL.MENU.EXPANSION 
E.MB.ACCOUNT.STATEMENT MB.OFS.AUTO.FUNCTION 
MB.FIND.CUST.DEPS 
 



 
Resolution: 
 
Removed Subroutines in R13 	Reason for removal in R13 
MB.ADD.APP.FORMAT 	The logic is no more required. 
MB.DISP.BLANK 	The logic is implemented in enquiry ACC.CURRENT.INT itself. 
MB.BEA.LIST.LOANS 	Routine replaced with E.MB.LIST.LOANS 
MB.IC.RT.CHG.BASIC 	The user field "MB.BASIC.RATE" is removed in SS. 
MB.MARGIN.OPER.DISP 	Routine replaced with 
E.MB.IC.MARGIN.OPER.DISP 
MB.E.MG.BALANCE.ENQUIRY 	The product "MG" is obsolete. 
MB.GET.LOC.REF 	Getting local ref  field position is no more required. 
E.MB.GET.CREF.ID 	The logic is implemented in enquiry DX.CLOSEOUT.LIST itself. 
E.MB.UNSETTLED.TRADES 	Enquiries are changed to Nofile enquiries. Enquiry SC.SETT.BY.SAM.SCV in R09 uses this routine. 
MB.E.CUS.POS.NEXT.LEVEL 	Routine changed to 
E.CUS.POS.NEXT.LEVEL 
PMB.SA.DX 	Routine is replaced with 
E.MB.DX.AUTH.UNAUTH.DEALS 
MB.MG.REPFWD.VIEW 	The product "MG" is obsolete. 
MB.IC.RT.CHG.MAR.DR 	The user field "MB.MAR.RATE.DR" is removed in SS. 
MB.IC.RT.CHG.BAS.DR 	The user field "MB.BAS.RATE.DR" is removed in SS. 
MB.INT.TYPE.RTN 	The logic is changed in enquiry. 
MB.E.TXN.ENTRY 	Routine  changed to E.TXN.ENTRY 
MB.IC.RT.CHG.MARGIN 	The user field "MB.MARGIN.RATE" is removed in SS. 
E.MB.FD.POOL.BULK.AUTH 	The logic is implemented in enquiry itself. 
MB.TILL.ENTRIES.TODAY 	The SS file used in nofile enquiry TILL.ENTRIES.TODAY is changed.   (Now using SS file - NOFILE.STMT.DETAIL) 
E.MB.GET.DIARYID 	Routine E.GET.DIARYID is used in SS in R09. 
MB.E.CONV.LIM.CUST 	No prefix "MB" usage. 
E.MB.RATE.REVISION 	The enquiry MB.MG.RATE.REVISION is obsolete. 
E.MB.LIAB.DRAWDOWN 	Prefix PMB/MB is not required. 
E.MB.GET.UNSETT.FLG 	Routine E.MB.GET.UNSETT.FLG is used in SS in R09. 
E.MB.SC.VAL.SELECTION 	Routine changed to E.SC.VAL.SELECTION. 
E.MB.SC.VAL.SELECTION 	Routine changed to E.SC.VAL.SELECTION. 
MB.CREATE.AUTH.OFS.MSG 	  
MB.CM.FIND.MATCHED.ITEMS 	  
MB.CREATE.ZERO.AUTH.VERSION 	  
MB.FIND.CUST.NET.WORTH 	  
MB.EXTRACT.MENU.ITEMS 	  
V.DLD.CALL.MENU.EXPANSION 	  
E.MB.ACCOUNT.STATEMENT 	  
MB.OFS.AUTO.FUNCTION 	  
MB.FIND.CUST.DEPS 	  
   
	130. 	EB.SYSTEM.SUMMARY 
 
Keyword/Name: 
EB.SYSTEM.SUMMARY 
 
Resolution: 
EB.SYSTEM.SUMMARY ID format 
 
Description: 
EB.SYSTEM.SUMMARY ID format will be changed from R14 onwards after upgrade for new records only. Need to check how to change local code accordingly. 
 
 
	131. 	ERR and STORE.END.ERROR 
 
Keyword/Name: ERR and STORE.END.ERROR 
Resolution: 
ERR and STORE.END.ERROR should be used appropriately 
Description: 
a)	To throw the error message in id routine of version and to stop the transaction just populates the error message in common variable E. No need to call ERR or 
STORE.END.ERROR 
b)	If the error message is populated in common variable E in the version routines, set the variables AF, AV, AS and call the routine ERR. ERR will raise the error message immediately if used in validation routines.  
c)	If the error message is populated in ETEXT in the version routines, then set the variables AF, AV, AS and call the routine STORE.END.ERROR. STORE.END.ERROR will store the error messages and raise it only at the end. 

